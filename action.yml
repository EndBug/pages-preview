name: Pages Preview
author: Federico Grandi <fgrandi30@gmail.com>
description: Deploy GitHub Pages previews for your branches and PRs

branding:
  color: gray-dark
  icon: upload-cloud

inputs:
  # Required
  build_dir: 
    description: The directory in which the website has been built. Should be written as a/b/c
    required: true
  preview_repo:
    description: The repository to push previews to, in the Owner/Name format
    required: true
  preview_token:
    description: The token to access the preview repo
    required: true
  preview_base_url:
    description: The GitHub Pages base URL of the preview repo (e.g. https://octocat.github.io/preview)
    required: true
  # Not required
  commit_author_name:
    description: The name of the author of the resulting commit
    default: ${{ github.actor }}
    required: false
  commit_author_email:
    description: The email of the author of the resulting commit
    default: ${{ github.actor }}@users.noreply.github.com
    required: false
  pr_comment:
    description: Whether to comment on PRs
    default: 'true'
    required: false
  preview_branch:
    description: The name of the branch that hosts the previews
    default: gh-pages
    required: false
  preview_workflow_file_name:
    description: The name of the workflow file that contains the comment workflow in the preview repo. If you use my template, the name is already 'preview.yml'
    default: preview.yml
    required: false

runs:
  using: composite
  steps:
  - name: Parse what the action has to perform
    run: ${{ github.action_path }}/lib/parse_action.sh
    shell: bash
    id: parse_action
    # outputs: action, path
    env:
      EVENT_NAME: ${{ github.event_name }}
      EVENT_TYPE: ${{ github.event.action }}
      PR_NUMBER: ${{ github.event.number }}
      REF_NAME: ${{ github.ref_name }}
      REF_TYPE: ${{ github.ref_type }}
      REPO_NAME: ${{ github.repository }}

  - name: Set up the preview repo
    if: ${{ steps.parse_action.outputs.action != 'none' }}
    shell: bash
    run: |
      cd ${{ github.workspace }}/..
      git clone "https://git:${{ inputs.preview_token }}@github.com/${{ inputs.preview_repo }}.git" preview_${{ github.sha }}
      cd preview_${{ github.sha }} 
      git config --global user.name ${{ inputs.commit_author_name }}
      git config --global user.email ${{ inputs.commit_author_email }}
      echo "GIT_COMMITTER_NAME=GitHub Actions" >> $GITHUB_ENV
      echo "GIT_COMMITTER_EMAIL=41898282+github-actions[bot]@users.noreply.github.com" >> $GITHUB_ENV
      git checkout ${{ inputs.preview_branch }}
    
  - name: Copy the build directory to the destination and commit the changes
    if: ${{ steps.parse_action.outputs.action == 'deploy' }}
    shell: bash
    working-directory: ../preview_${{ github.sha }}
    run: |
      git rm "${{ steps.parse_action.outputs.path }}" -r --ignore-unmatch
      mkdir -p "${{ steps.parse_action.outputs.path }}" && cp "${{ github.workspace }}/${{ inputs.build_dir }}/." "$_" -a
      git add "${{ steps.parse_action.outputs.path }}"
      git commit --message="ci: deploy preview for ${{ steps.parse_action.outputs.path }}\n\nCommit created with [EndBug/pages-preview](https://github.com/EndBug/pages-preview)" --allow-empty
      git push origin ${{ inputs.preview_branch }}

  - name: Remove the destination directory and commit the changes
    if: ${{ steps.parse_action.outputs.action == 'remove' }}
    shell: bash
    working-directory: ../preview_${{ github.sha }}
    run: |
      git rm "${{ steps.parse_action.outputs.path }}" -r --ignore-unmatch
      git commit --message="ci: remove preview for ${{ steps.parse_action.outputs.path }}\n\nCommit created with [EndBug/pages-preview](https://github.com/EndBug/pages-preview)" --allow-empty
      git push origin ${{ inputs.preview_branch }}

  - name: Get current ref & commit date
    if: ${{ steps.parse_action.outputs.action != 'none' }}
    id: current_ref
    shell: bash
    working-directory: ../preview_${{ github.sha }}
    # outputs: sha, date
    run: |
      echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      echo "date=$(git show -s --format=%ci HEAD)" >> $GITHUB_OUTPUT

  - name: Parse preview repo owner and name
    if: ${{ steps.parse_action.outputs.action != 'none' }}
    id: parse_preview_repo
    shell: bash
    # outputs: owner, name
    run: |
      echo "owner=$(cut -d "/" -f 1 <<<"${{ inputs.preview_repo }}")" >> $GITHUB_OUTPUT
      echo "name=$(cut -d "/" -f 2 <<<"${{ inputs.preview_repo }}")" >> $GITHUB_OUTPUT

  - name: Trigger deployment in the preview repo
    uses: convictional/trigger-workflow-and-wait@v1.6.5
    if: ${{ steps.parse_action.outputs.action != 'none' }}
    id: dispatch
    with:
      owner: ${{ steps.parse_preview_repo.outputs.owner }}
      repo: ${{ steps.parse_preview_repo.outputs.name }}
      github_token: ${{ inputs.preview_token }}
      workflow_file_name: ${{ inputs.preview_workflow_file_name }}
      wait_interval: 10
      # VERSION: update before changing the major version
      client_payload: >-
        {
          "ref": "${{ steps.current_ref.outputs.sha }}",
          "version": "v1"
        }
      propagate_failure: true
  
  - name: Determine whether to comment on PR
    id: pr_comment
    shell: bash
    run: >-
      echo "result=${{
        inputs.pr_comment == 'true' && 
        startsWith(github.event_name, 'pull_request') && 
        steps.parse_action.outputs.action != 'none' && 
        steps.dispatch.outputs.conclusion == 'success' 
      }}" >> $GITHUB_OUTPUT

  - name: Parse source repo owner and name
    if: ${{ steps.pr_comment.outputs.result == 'true' }}
    id: parse_source_repo
    shell: bash
    # outputs: owner, name
    run: |
      echo "owner=$(cut -d "/" -f 1 <<<"${{ github.repository }}")" >> $GITHUB_OUTPUT
      echo "name=$(cut -d "/" -f 2 <<<"${{ github.repository }}")" >> $GITHUB_OUTPUT

  - name: Comment on deployment
    if: ${{ steps.pr_comment.outputs.result == 'true' && steps.parse_action.outputs.action == 'deploy' }}
    uses: marocchino/sticky-pull-request-comment@v2
    with:
      repo: ${{ steps.parse_source_repo.outputs.name }}
      message: |-
        [Pages Preview](https://github.com/EndBug/pages-preview)
        :---:
        :rocket: Deployed preview to ${{ inputs.preview_base_url }}/${{ steps.parse_action.outputs.path }}
        on branch [`${{ inputs.preview_branch }}`](${{ github.server_url }}/${{ inputs.preview_repo }}/tree/${{ inputs.preview_branch }}) at ${{ steps.current_ref.outputs.date }}
      number: ${{ github.event.number }}
      
  - name: Comment on removal
    if: ${{ steps.pr_comment.outputs.result == 'true' && steps.parse_action.outputs.action == 'remove' }}
    uses: marocchino/sticky-pull-request-comment@v2
    with:
      repo: ${{ steps.parse_source_repo.outputs.name }}
      message: |-
        [Pages Preview](https://github.com/EndBug/pages-preview)
        :---:
        Preview removed because the pull request was closed.
        ${{ steps.current_ref.outputs.date }}
      number: ${{ github.event.number }}
