# -------------------------------------------------------------------------------------------------
# This workflow is supposed to be re-used in your own deployment workflow.
# To do this, read the instructions in the README.md file.
# -------------------------------------------------------------------------------------------------

name: Push to the preview repo
on:
  workflow_call:
    inputs:
      build_dir: 
        description: The directory in which the website has been built. Should be written as a/b/c
        type: string
        required: true
      preview_repo:
        description: The repository to push previews to, in the Owner/Name format
        type: string
        required: true

      commit_author_name:
        description: The name of the author of the resulting commit
        type: string
        default: GitHub Actions
        required: false
      commit_author_email:
        description: The email of the author of the resulting commit
        type: string
        default: 41898282+github-actions[bot]@users.noreply.github.com
        required: false
      preview_branch:
        description: The name of the branch that hosts the previews
        type: string
        default: gh-pages
        required: false
      preview_base_url:
        description: The GitHub Pages base URL of the preview repo
        type: string
        required: false

    secrets:
      preview_token:
        description: Token to access the preview repo
        required: true

# Note: when running a reusable workflow, the github context is associated with the caller repo.
jobs:
  push:
    name: Push changes to the preview repo
    runs-on: ubuntu-latest
    concurrency: push/${{ github.repository }}/${{ startsWith(github.event_name, 'pull_request') && 'pr' || 'branch' }}
    outputs:
      action: ${{ steps.parse.outputs.action || 'none' }}
      commit_date: ${{ steps.current_ref.outputs.date }}
      current_ref: ${{ steps.current_ref.outputs.sha }}
      path: ${{ steps.parse.outputs.path }}
    steps:
      - name: Parse what the action to perform
        run: ./lib/parse_action.sh
        shell: bash
        id: parse
        # outputs: action, path
        env:
          EVENT_NAME: ${{ github.event_name }}
          EVENT_PAYLOAD: ${{ toJSON(github.event) }}
          REPO_NAME: ${{ github.repository }}

      - name: Set up the preview repo
        if: ${{ steps.parse.outputs.action != 'none' }}
        run: |
          cd ../..
          gh repo clone ${{ inputs.preview_repo }}
          cd preview
          git config --global user.name ${{ inputs.commit_author_name }}
          git config --global user.email ${{ inputs.commit_author_email }}
          echo "GIT_COMMITTER_NAME=GitHub Actions" >> $GITHUB_ENV
          echo "GIT_COMMITTER_EMAIL=41898282+github-actions[bot]@users.noreply.github.com" >> $GITHUB_ENV
          git remote set-url origin https://git:${{ secrets.preview_token }}@github.com/${{ inputs.preview_repo }}.git
          git checkout ${{ inputs.preview_branch }}

      - name: Copy the build directory to the destination and commit the changes
        if: ${{ steps.parse.outputs.action == 'deploy' }}
        run: |
          git rm "${{ steps.parse.outputs.path }}" -r
          cp "${{ github.workspace }}/${{ inputs.build_dir }}" "${{ steps.parse.outputs.path }}" -r
          git add "${{ steps.parse.outputs.path }}"
          git commit --message="ci: deploy preview for ${{ steps.parse.outputs.path }}"
          git push origin ${{ inputs.preview_branch }}

      - name: Remove the destination directory and commit the changes
        if: ${{ steps.parse.outputs.action == 'remove' }}
        run: |
          git rm "${{ steps.parse.outputs.path }}" -r
          git commit --message="ci: remove preview for ${{ steps.parse.outputs.path }}"
          git push origin ${{ inputs.preview_branch }}

      - name: Get current ref & commit date
        if: ${{ steps.parse.outputs.action != 'none' }}
        id: current_ref
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "date=$(git show -s --format=%ci HEAD)" >> $GITHUB_OUTPUT

  deploy:
    name: Trigger deployment on the preview repo
    needs: push
    if: ${{ needs.push.outputs.action != 'none' }}
    runs-on: ubuntu-latest
    concurrency: deploy/${{ github.repository }}/${{ startsWith(github.event_name, 'pull_request') && 'pr' || 'branch' }}
    steps:
      - name: Parse repo owner and name
        id: parse_repo
        # outputs: repo_owner, repo_name, current_ref
        run: |
          echo "repo_owner=$(cut -d "/" -f 1 <<<"${{ inputs.preview_repo }}")" >> $GITHUB_OUTPUT
          echo "repo_name=$(cut -d "/" -f 2 <<<"${{ inputs.preview_repo }}")" >> $GITHUB_OUTPUT
          
      - name: Trigger deployment in the preview repo
        if: ${{ steps.parse.outputs.action != 'none' }}
        uses: adityakar/workflow-dispatcher@v1.0
        with:
          owner: ${{ steps.parse_repo.outputs.repo_owner }}
          repo: ${{ steps.parse_repo.outputs.repo_name }}
          token: ${{ secrets.preview_token }}
          event_type: deploy-preview
          client_payload: '{"ref": "${{ steps.parse_repo.outputs.current_ref }}"}'
          wait_time: 5
          max_time: 180

  comment:

    name: Comment on the PR
    needs: [push, deploy]
    if: ${{ startsWith(github.event_name, 'pull_request') && needs.push.outputs.action != 'none' }}
    runs-on: ubuntu-latest

    # Thanks, https://github.com/rossjrw/pr-preview-action/blob/eac2838daf487e8f054a4bc10dc957431cd6270b/action.yml
    # marocchino/sticky-pull-request-comment should already have everything it needs from the caller repo, since 
    # the github context is associated with the caller. 
    steps:
      - name: Comment on deployment
        if: ${{ needs.push.outputs.action == 'deploy' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: "\
            [Pages Preview]\
            (${{ github.server_url }}/EndBug/pages-preview)
            :---:
            :rocket: Deployed preview to
            https://${{ inputs.preview_base_url }}/${{ needs.push.outputs.path }}/
            on branch [`${{ inputs.preview_branch }}`](\
            ${{ github.server_url }}/${{ inputs.preview_repo }}\
            /tree/${{ inputs.preview_branch }})
            at ${{ needs.push.outputs.date }}
            "
          

      - name: Comment on removal
        if: ${{ needs.push.outputs.action == 'remove' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          repo: ${{ github.repository }}
          message: "\
            [Pages Preview]\
            (${{ github.server_url }}/EndBug/pages-preview)
            :---:
            Preview removed because the pull request was closed.
            ${{ needs.push.outputs.date }}
            "
